apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: dapr.db.local.redis.com
  labels:
    type: dapr-dev
    provider: local
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: redis.com/v1alpha1
    kind: xDatabase
  mode: Pipeline
  pipeline:
  - step: Create Redis
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - name: redis-helm-release
        base:
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            annotations:
              crossplane.io/external-name: # patched
          spec:
            rollbackLimit: 3
            forProvider:
              namespace: default # patched
              chart:
                name: redis
                repository: https://charts.bitnami.com/bitnami
                version: "17.8.0"
              values:
                architecture: #patched
            providerConfigRef:
              name: default
        patches:
          - fromFieldPath: spec.namespace
            toFieldPath: spec.forProvider.namespace
          - fromFieldPath: spec.architecture
            toFieldPath: spec.forProvider.values.architecture
          - fromFieldPath: metadata.name
            toFieldPath: metadata.annotations[crossplane.io/external-name]
            policy:
              fromFieldPath: Required
          - fromFieldPath: metadata.name
            toFieldPath: metadata.name
            transforms:
              - type: string
                string:
                  type: Format
                  fmt: "%s-redis"
  - step: automatically-detect-ready-composed-resources
    functionRef:
      name: function-auto-ready
  - step: Dapr Redis Components
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - name: redis-secret
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha1
          kind: Object
          spec:
            providerConfigRef:
              name: default
            references:
            - patchesFrom:
                apiVersion: v1
                kind: Secret
                fieldPath: data.redis-password
              toFieldPath: data.password
            forProvider:
              manifest:
                apiVersion: v1
                kind: Secret
                metadata:
                  name: #patched
                  namespace: default
                data:
                  password: #patched
        patches:
          - fromFieldPath: spec.namespace
            toFieldPath: spec.forProvider.manifest.metadata.namespace
          - fromFieldPath: metadata.name
            toFieldPath: spec.forProvider.manifest.metadata.name
            transforms:
            - type: string
              string:
                type: Format
                fmt: '%s-redis-dapr'
          - fromFieldPath: metadata.name
            toFieldPath: spec.references[0].patchesFrom.name
            transforms:
            - type: string
              string:
                type: Format
                fmt: '%s-redis'
      - name: dapr-statestore
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha1
          kind: Object
          spec:
            providerConfigRef:
              name: default
            forProvider:
              manifest:
                apiVersion: dapr.io/v1alpha1
                kind: Component
                metadata:
                  name: #patched
                  namespace: #patched
                spec:
                  type: state.redis
                  version: v1
                  metadata:
                  - name: redisHost
                    value: #patched
                  - name: redisPassword
                    secretKeyRef:
                      name: #patched
                      key:  password
                auth:
                  secretStore: kubernetes
        patches:
          - fromFieldPath: spec.namespace
            toFieldPath: spec.forProvider.manifest.metadata.namespace
          - fromFieldPath: spec.statestore.name
            toFieldPath: spec.forProvider.manifest.metadata.name
          - fromFieldPath: metadata.name
            toFieldPath: spec.forProvider.manifest.spec.metadata[1].secretKeyRef.name
            transforms:
            - type: string
              string:
                type: Format
                fmt: '%s-redis-dapr'
          - fromFieldPath: metadata.name
            toFieldPath: spec.forProvider.manifest.spec.metadata[0].value
            transforms:
            - type: string
              string:
                type: Format
                fmt: '%s-redis-master:6379'